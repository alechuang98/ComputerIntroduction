function Ball.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 255
pop this 0
push constant 40
pop this 1
push this 0
push this 0
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 0
push this 1
sub
push this 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 0
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 0
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 10
sub
push this 0
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 10
add
push this 0
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push pointer 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.move 0
push argument 0
pop pointer 0
call Keyboard.keyPressed 0
pop this 3
push this 3
push constant 132
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 160
add
pop this 2
push this 2
push constant 255
push constant 161
add
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
label WHILE_EXP0
push this 0
push this 2
push constant 1
sub
lt
not
if-goto WHILE_END0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 20
add
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 5
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 5
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 10
sub
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 10
add
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push argument 1
call Scene.draw 1
pop temp 0
push constant 5
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
label IF_FALSE1
push constant 0
return
label IF_FALSE0
push this 3
push constant 130
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push constant 160
sub
pop this 2
push this 2
push constant 255
push constant 161
sub
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
label WHILE_EXP1
push this 0
push this 2
push constant 1
add
gt
not
if-goto WHILE_END1
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 20
sub
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 1
call Scene.draw 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 10
sub
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 10
add
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 5
call Sys.wait 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
label IF_FALSE3
push constant 0
return
label IF_FALSE2
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push constant 255
push this 1
sub
push this 1
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push this 1
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push constant 255
push this 1
sub
push constant 13
add
push this 1
push constant 4
call Math.divide 2
push constant 2
sub
call Screen.drawCircle 3
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push constant 10
sub
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push this 0
push constant 10
add
push constant 255
push this 1
sub
push constant 15
sub
push this 1
push constant 8
call Math.divide 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball._pos 0
push argument 0
pop pointer 0
push this 0
return
