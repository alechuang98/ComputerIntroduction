class Scene{
	field int x,y,T,ran,L,M,R,f,f2,cnt,TL,TR;
	field Array yp,xl,xt;
	constructor Scene new(int Ax ,int Ay,int _L,int _M,int _R){
		let xt = Array.new(25);
		
		let xt[1]=18;
		let xt[2]=18;
		let xt[3]=19;
		let xt[4]=20;
		let xt[5]=21;
		let xt[6]=22;
		let xt[7]=23;
		let xt[8]=24;
		let xt[9]=26;
		let xt[10]=28;
		let xt[11]=29;
		let xt[12]=31;
		let xt[13]=32;
		let xt[14]=33;

		let yp = Array.new(25);
		
		let yp[1]=112;
		let yp[2]=117;
		let yp[3]=123;
		let yp[4]=130;
		let yp[5]=138;
		let yp[6]=147;
		let yp[7]=157;
		let yp[8]=168;
		let yp[9]=180;
		let yp[10]=193;
		let yp[11]=207;
		let yp[12]=222;
		let yp[13]=238;
		let yp[14]=255;

		let xl = Array.new(25);
		let xl[1]=49;
		let xl[2]=53;
		let xl[3]=58;
		let xl[4]=63;
		let xl[5]=69;
		let xl[6]=76;
		let xl[7]=84;
		let xl[8]=93;
		let xl[9]=102;
		let xl[10]=112;
		let xl[11]=123;
		let xl[12]=134;
		let xl[13]=146;
		let xl[14]=160;
		let x = Ax;
        let y = Ay;
        let L=_L;
        let R=_R;
        let M=_M;
        let TL=0;
        let TR=0;
        let f=0;
        let f2=0;
        let cnt=0;
        do Random.seed(100);
		do draw();
		return this;
	}
	method void draw(){

		do Screen.setColor(true);
		do Screen.drawLine(16,255,196,100);
		do Screen.drawLine(17,255,197,100);
		do Screen.drawLine(176,255,236,100);
		do Screen.drawLine(177,255,237,100);
		do Screen.drawLine(336,255,276,100);
		do Screen.drawLine(337,255,277,100);
		do Screen.drawLine(496,255,316,100);
		do Screen.drawLine(497,255,317,100);
		do Screen.drawLine(0,240,180,100);
		do Screen.drawLine(1,240,181,100);
		do Screen.drawLine(511,240,332,100);
		do Screen.drawLine(510,240,331,100);

		do creatTree(TL,1);
		do creatTree(TR,2);
		do creatOB(L,1);
		do creatOB(M,2);
		do creatOB(R,3);

		return;
	}

	method void creatTree(int pos ,int id){
		let T=11;
		while(T>0){
			if((pos&1)=1){
				if(id=1){
					do drawTree((2160-(9*yp[T]))/7,yp[T],xt[T]);
				}
				if(id=2){
					do drawTree((1417+(9*yp[T]))/7,yp[T],xt[T]);	
				}
			}
			let T=T-1;
			let pos=(pos/2);
		}
		return;
	}

	method void creatOB(int pos,int id){
		let T=13;
		while(T>0){
			if((pos&1)=1){
				if(id=1){
					do drawOB((9676-(36*yp[T]))/31,yp[T],xl[T]);
				}
				if(id=2){
					do drawOB((8516-(12*yp[T]))/31,yp[T],xl[T]);	
				}
				if(id=3){
					do drawOB((7356+(12*yp[T]))/31,yp[T],xl[T]);		
				}
			}
			let T=T-1;
			let pos=(pos/2);
		}
		return;
	}

	method void drawTree(int _x,int _y,int size){
		do Screen.setColor(true);
		do Tree.draw(_x,_y,(size/4));
		return;
	}

	method void drawOB(int _x,int _y,int size){
		do Screen.setColor(true);
		do Barrier.draw(_x+10,_y,size-20);
		return;
	}

	method void update(){
		let L=(L/2);
		let M=(M/2);
		let R=(R/2);
		let TL=(TL/2);
		let TR=(TR/2);
		let ran=Random.between(1,7);
		let f=f+1;
		let f2=f2+1;
		if(f2=4){
			let f2=0;
			let TL=TL+16384;
			let TR=TR+16384;
		}
		if(f=6){
			let f=0;
			let cnt=cnt+1;
			if(ran=1){
				let L=L+16384;
			}
			if(ran=2){
				let M=M+16384;
			}
			if(ran=3){
				let R=R+16384;
			}
			if(ran=4){
				let L=L+16384;
				let M=M+16384;
			}
			if(ran=5){
				let M=M+16384;
				let R=R+16384;
			}
			if(ran=6){
				let L=L+16384;
				let R=R+16384;
			}
		}
		do Screen.clearScreen();
		return;
	}
	method int _L(){
		return L; 
	}
	method int _R(){
		return R; 
	}
	method int _M(){
		return M; 
	}
	method int _cnt(){
		return cnt;
	}
}